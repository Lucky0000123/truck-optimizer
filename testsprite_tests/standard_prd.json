{
  "meta": {
    "project": "Truck-Dump Waiting-Time Optimiser",
    "version": "1.0.0",
    "date": "2025-07-23",
    "prepared_by": "Generated by TestSprite"
  },
  "product_overview": "A Streamlit-based Python web application designed for Weda Bay Nickel to optimize truck queuing and minimize waiting times at FENI dump sites by rescheduling contractor shift start times using discrete-event simulations and queuing theory.",
  "core_goals": [
    "Provide real-time dashboard analytics of truck queue KPIs and fleet performance at FENI dump locations.",
    "Accurately calculate and model waiting times at dump sites using M/M/1 queuing theory.",
    "Enable mine planners to manually and automatically optimize contractor shift start times to reduce dump site congestion.",
    "Support multi-site dump location management including primary and alternative dump points.",
    "Export optimized scheduling recommendations in Excel format for operational implementation."
  ],
  "key_features": [
    "Real-time dashboard displaying key performance indicators including wait times, utilization, and contractor trip analytics with heatmaps and Gantt charts.",
    "Waiting time calculation using M/M/1 queuing model with utilization-based thresholds for realistic delay estimation.",
    "Individual dump location analysis for FENI KM0 and KM15 sites with configurable service rates.",
    "Discrete-event simulation engine with 15-minute time buckets for modeling truck flows and queue dynamics.",
    "Manual and automated shift-start offset optimization including grid search algorithm for best departure time recommendations.",
    "Fleet configuration management encompassing contractors, truck counts, routes, and dump site assignments.",
    "Excel data integration and cleaning for operational cycle and travel time inputs.",
    "Export functionality for downloadable, implementation-ready Excel schedules with recommended offsets."
  ],
  "user_flow_summary": [
    "User uploads or places Excel dataset with historical truck haul cycle data.",
    "System loads, cleans, and processes data, mapping locations and calculating key metrics.",
    "User reviews baseline KPIs on dashboard including waiting times, utilization, and contractor distributions.",
    "User navigates to optimization panel to manually adjust contractor start time offsets or trigger auto-optimization.",
    "System runs discrete-event simulation and updates KPIs reflecting queue impact and waiting time reductions.",
    "User views before/after simulation visualizations comparing baseline with optimized schedules.",
    "User exports the recommended optimized schedule as an Excel file for operational use.",
    "Planning team reviews exported schedules and applies recommended shift start offsets in operations."
  ],
  "validation_criteria": [
    "KPI dashboard refreshes within 2 seconds on datasets with up to 10,000 cycles.",
    "Waiting time calculations correctly implement M/M/1 queuing theory with utilization thresholds.",
    "Optimization algorithm successfully runs grid search and produces recommended offsets decreasing average dump wait times.",
    "Excel data is loaded and cleaned automatically with no missing critical fields.",
    "Exported Excel schedules contain correct contractor offsets and timing data matching optimization results.",
    "System handles multi-site dump locations including FENI KM0 and KM15 with proper service rates.",
    "Simulation engine models time in discrete 15-minute buckets and reflects queue dynamics accurately.",
    "User interface response to manual and auto-optimization inputs updates KPIs and visualizations immediately."
  ],
  "code_summary": {
    "tech_stack": [
      "Python",
      "Streamlit",
      "Pandas",
      "Plotly",
      "NumPy",
      "Excel/OpenPyXL",
      "M/M/1 Queuing Theory"
    ],
    "features": [
      {
        "name": "Real-time Dashboard",
        "description": "Main dashboard displaying KPIs, waiting times, and fleet performance metrics for FENI dump sites",
        "files": [
          "app.py",
          "ui_components.py"
        ]
      },
      {
        "name": "Waiting Time Calculation Engine",
        "description": "Core M/M/1 queuing theory algorithms to calculate realistic waiting times at dump sites using utilization-based approach",
        "files": [
          "core_calculations.py",
          "ui_components.py"
        ]
      },
      {
        "name": "Individual Dump Location Analysis",
        "description": "Calculates waiting times and utilization for specific individual dump locations within FENI KM0 and KM15",
        "files": [
          "ui_components.py",
          "config.py"
        ]
      },
      {
        "name": "Departure Time Optimization",
        "description": "Optimization algorithm to find best departure times from parking locations to minimize dump site waiting times",
        "files": [
          "app.py",
          "core_calculations.py"
        ]
      },
      {
        "name": "Fleet Configuration Management",
        "description": "System to configure contractors, truck counts, routes, and dump site assignments",
        "files": [
          "ui_components.py",
          "data_handlers.py",
          "config.py"
        ]
      },
      {
        "name": "Excel Data Integration",
        "description": "Loads and processes Time_Data.xlsx with real operational data for cycle times and travel times",
        "files": [
          "data_handlers.py",
          "core_calculations.py"
        ]
      },
      {
        "name": "FENI Dump Site Management",
        "description": "Hierarchical management of FENI KM0 and KM15 dump sites with individual sub-locations and service rates",
        "files": [
          "config.py",
          "core_calculations.py"
        ]
      },
      {
        "name": "Service Rate Configuration",
        "description": "Defines service rates for dump sites: FENI KM0 (8.5 trucks/hour), FENI KM15 (11.0 trucks/hour) based on real data",
        "files": [
          "core_calculations.py",
          "ui_components.py"
        ]
      },
      {
        "name": "Utilization-Based Wait Calculation",
        "description": "Uses rho (utilization factor) = arrival_rate / service_rate to determine waiting times with thresholds: rho>=0.9 (34.8 min), rho>=0.7 (25 min), else M/M/1 formula",
        "files": [
          "core_calculations.py",
          "ui_components.py"
        ]
      },
      {
        "name": "Real Truck Journey Simulation",
        "description": "Simulates individual truck journeys from parking to loading to dumping with realistic travel times and congestion factors",
        "files": [
          "app.py",
          "core_calculations.py"
        ]
      }
    ]
  }
}
